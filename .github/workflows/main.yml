name: Run watch_momentum_signals

on:
  schedule:
    # JST -> UTC は -9時間
    - cron: "15 6 * * 1-5"   # JST 15:15（本命）
workflow_dispatch: {}

permissions:
  contents: read

# 同時実行の競合を避ける（後から来た発火を優先）
concurrency:
  group: watch-momentum-signals
  cancel-in-progress: true

jobs:
  run-script:
    runs-on: ubuntu-latest

    # 旧 .env の値（Secret はここに書かない）
    env:
      TZ: "Asia/Tokyo"
      VOLUME_MULT: "1.5"
      VOL_QUANTILE: "0.80"
      MIN_TURNOVER_JPY: "0"
      VOL_COND_MODE: "OR"
      FIRST_SEEN_BD: "2"
      # Slack は Secrets から
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # 時間ガード用（15:15 ± 20分だけ実行）
      TARGET_HOUR_JST: "15"
      TARGET_MINUTE_JST: "15"
      WINDOW_MIN: "20"

    steps:
      - name: Time gate (run only near 15:15 JST)
        id: gate
        run: |
          now_h=$(TZ=Asia/Tokyo date +%H)
          now_m=$(TZ=Asia/Tokyo date +%M)
          now=$((10#$now_h*60 + 10#$now_m))
          tgt=$((10#$TARGET_HOUR_JST*60 + 10#$TARGET_MINUTE_JST))
          diff=$(( now>tgt ? now-tgt : tgt-now ))
          if [ $diff -le $WINDOW_MIN ]; then
            echo "run=true" >> $GITHUB_OUTPUT
            echo "Within window: diff=${diff}min"
          else
            echo "run=false" >> $GITHUB_OUTPUT
            echo "Outside window: diff=${diff}min"
          fi

      - name: Checkout repository
        if: steps.gate.outputs.run == 'true'
        uses: actions/checkout@v3

      - name: Set up Python
        if: steps.gate.outputs.run == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        if: steps.gate.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # --- 前回の notified_state.json を復元 ---
      - name: Restore notified_state.json cache
        if: steps.gate.outputs.run == 'true'
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: notified_state.json
          key: notified_state-${{ github.run_id }}
          restore-keys: |
            notified_state-

      - name: Touch state if missing
        if: steps.gate.outputs.run == 'true'
        run: |
          [ -f notified_state.json ] || echo '{}' > notified_state.json

      - name: Run script
        if: steps.gate.outputs.run == 'true'
        run: |
          python watch_momentum_signals.py

      # --- 実行後 state を保存 ---
      - name: Save notified_state.json cache
        if: always() && steps.gate.outputs.run == 'true'
        uses: actions/cache/save@v4
        with:
          path: notified_state.json
          key: notified_state-${{ github.run_id }}
